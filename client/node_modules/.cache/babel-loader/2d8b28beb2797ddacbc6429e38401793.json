{"ast":null,"code":"import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport * as yup from \"yup\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\n\nfunction CadastroLogin() {\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n    function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n    // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n    function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n    function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n      Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\n\n  /*\r\n  const handleRegister = (values) => {\r\n    Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      email: values.email,\r\n      password: values.password,\r\n    }).then((response) => {\r\n      alert(response.data.msg);\r\n      console.log(response);\r\n    });\r\n  };\r\n    const validationsRegister = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email(\"E-mail inválido.\")\r\n      .required(\"O email é obrigatório.\"),\r\n    password: yup\r\n      .string()\r\n      .min(8, \"A senha deve ter no mínimo 8 caracteres.\")\r\n      .required(\"A senha é obrigatória.\"),\r\n    confirmation: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes.\")\r\n      .required(\"A confirmação da senha é obrigatória.\"),\r\n  });\r\n    return (\r\n    <div>\r\n      <h1>Cadastre-se no nosso Sistema</h1>\r\n        <h1>Cadastro</h1>\r\n      <Formik\r\n        initialValues={{}}\r\n        onSubmit={handleRegister}\r\n        validationSchema={validationsRegister}\r\n      >\r\n        <label>Nome Completo: </label>\r\n        <Field\r\n          type=\"text\"\r\n          name=\"nomeLogin\"\r\n          id=\"nomeLogin\"\r\n          maxLength=\"50\"\r\n          required\r\n        ></Field>\r\n          <div className=\"register-form-group\">\r\n          <label>Nome:</label>\r\n          <Field name=\"emailLogin\" className=\"form-field\" />\r\n            <ErrorMessage component=\"span\" name=\"email\" className=\"form-error\" />\r\n        </div>\r\n          <div className=\"form-group\">\r\n          <label>Senha:</label>\r\n          <Field name=\"senhaLogin\" className=\"form-field\" />\r\n            <ErrorMessage\r\n            component=\"span\"\r\n            name=\"senhaLogin\"\r\n            className=\"form-error\"\r\n          />\r\n        </div>\r\n          <div className=\"form-group\">\r\n          <label>Confirmação Senha:</label>\r\n          <Field name=\"confirmacaoSenha\" className=\"form-field\" />\r\n            <ErrorMessage\r\n            component=\"span\"\r\n            name=\"confirmacaoLogin\"\r\n            className=\"form-error\"\r\n          />\r\n        </div>\r\n      </Formik>\r\n    </div>\r\n  );*/\n}\n\n_c = CadastroLogin;\nexport default CadastroLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroLogin\");","map":{"version":3,"sources":["C:/Users/rebec/Desktop/sis.cadastro/client/src/cadastroLogin/CadastroLogin.js"],"names":["React","useState","Axios","yup","ErrorMessage","Formik","Form","Field","CadastroLogin"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;;AAEA,SAASC,aAAT,GAAyB;AACvaC;;KAxHQA,a;AAyHT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\n\r\nfunction CadastroLogin() {\r\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n\r\n  function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n\r\n  // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n\r\n  function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n\r\n    Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\r\n\r\n  /*\r\n  const handleRegister = (values) => {\r\n    Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      email: values.email,\r\n      password: values.password,\r\n    }).then((response) => {\r\n      alert(response.data.msg);\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const validationsRegister = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email(\"E-mail inválido.\")\r\n      .required(\"O email é obrigatório.\"),\r\n    password: yup\r\n      .string()\r\n      .min(8, \"A senha deve ter no mínimo 8 caracteres.\")\r\n      .required(\"A senha é obrigatória.\"),\r\n    confirmation: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes.\")\r\n      .required(\"A confirmação da senha é obrigatória.\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cadastre-se no nosso Sistema</h1>\r\n\r\n      <h1>Cadastro</h1>\r\n      <Formik\r\n        initialValues={{}}\r\n        onSubmit={handleRegister}\r\n        validationSchema={validationsRegister}\r\n      >\r\n        <label>Nome Completo: </label>\r\n        <Field\r\n          type=\"text\"\r\n          name=\"nomeLogin\"\r\n          id=\"nomeLogin\"\r\n          maxLength=\"50\"\r\n          required\r\n        ></Field>\r\n\r\n        <div className=\"register-form-group\">\r\n          <label>Nome:</label>\r\n          <Field name=\"emailLogin\" className=\"form-field\" />\r\n\r\n          <ErrorMessage component=\"span\" name=\"email\" className=\"form-error\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Senha:</label>\r\n          <Field name=\"senhaLogin\" className=\"form-field\" />\r\n\r\n          <ErrorMessage\r\n            component=\"span\"\r\n            name=\"senhaLogin\"\r\n            className=\"form-error\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Confirmação Senha:</label>\r\n          <Field name=\"confirmacaoSenha\" className=\"form-field\" />\r\n\r\n          <ErrorMessage\r\n            component=\"span\"\r\n            name=\"confirmacaoLogin\"\r\n            className=\"form-error\"\r\n          />\r\n        </div>\r\n      </Formik>\r\n    </div>\r\n  );*/\r\n\r\n\r\n  \r\n}\r\nexport default CadastroLogin;\r\n"]},"metadata":{},"sourceType":"module"}