{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\sis.cadastro\\\\client\\\\src\\\\cadastroLogin\\\\CadastroLogin.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport * as yup from \"yup\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroLogin() {\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n    function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n    // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n    function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n    function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n      Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\n  const handleRegister = values => {\n    Axios.post(\"http://localhost:3001/register\", {\n      email: values.email,\n      password: values.password\n    }).then(response => {\n      alert(response.data.msg);\n      console.log(response);\n    });\n  };\n\n  const validationsRegister = yup.object().shape({\n    email: yup.string().email(\"email inválido\").required(\"O email é obrigatório\"),\n    password: yup.string().min(8, \"A senha deve ter pelo menos 8 caracteres\").required(\"A senha é obrigatória\"),\n    confirmation: yup.string().oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes\").required(\"A confirmação da senha é obrigatória\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastre-se no nosso Sistema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      onSubmit: handleRegister,\n      validationSchema: validationsRegister,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\",\n            className: \"form-field\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"email\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"pa\",\n            name: \"password\",\n            className: \"form-field\",\n            placeholder: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"password\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"confirmation\",\n            className: \"form-field\",\n            placeholder: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"confirmation\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CadastroLogin;\nexport default CadastroLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroLogin\");","map":{"version":3,"sources":["C:/Users/rebec/Desktop/sis.cadastro/client/src/cadastroLogin/CadastroLogin.js"],"names":["React","Axios","yup","ErrorMessage","Formik","Form","Field","CadastroLogin","handleRegister","values","post","email","password","then","response","alert","data","msg","console","log","validationsRegister","object","shape","string","required","min","confirmation","oneOf","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\n\r\nfunction CadastroLogin() {\r\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n\r\n  function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n\r\n  // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n\r\n  function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n\r\n    Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\r\n\r\n  const handleRegister = (values) => {\r\n    Axios.post(\"http://localhost:3001/register\", {\r\n      email: values.email,\r\n      password: values.password,\r\n    }).then((response) => {\r\n      alert(response.data.msg);\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const validationsRegister = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .email(\"email inválido\")\r\n      .required(\"O email é obrigatório\"),\r\n    password: yup\r\n      .string()\r\n      .min(8, \"A senha deve ter pelo menos 8 caracteres\")\r\n      .required(\"A senha é obrigatória\"),\r\n    confirmation: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes\")\r\n      .required(\"A confirmação da senha é obrigatória\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cadastre-se no nosso Sistema</h1>\r\n\r\n      <h1>Cadastro</h1>\r\n\r\n      <h1>Cadastro</h1>\r\n      <Formik\r\n        initialValues={{}}\r\n        onSubmit={handleRegister}\r\n        validationSchema={validationsRegister}\r\n      >\r\n        <Form className=\"register-form\">\r\n          <div className=\"register-form-group\">\r\n            <Field type=\"email\" name=\"email\" className=\"form-field\" placeholder=\"Email\" />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"email\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Field type=\"pa\" name=\"password\" className=\"form-field\" placeholder=\"Senha\" />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"password\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <Field\r\n              name=\"confirmation\"\r\n              className=\"form-field\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"confirmation\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"button\" type=\"submit\">\r\n            Cadastrar\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default CadastroLogin;\r\n"]},"metadata":{},"sourceType":"module"}