{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rebec\\\\Desktop\\\\sis.cadastro\\\\client\\\\src\\\\cadastroLogin\\\\CadastroLogin.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport * as yup from \"yup\";\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\nimport \"./CadastroLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroLogin() {\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n    function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n    // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n    function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n    function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n      Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\n  const handleRegister = values => {\n    Axios.post(\"http://localhost:3001/register\", {\n      nome: values.nome,\n      email: values.email,\n      password: values.password\n    }).then(response => {\n      alert(response.data.msg);\n      console.log(response);\n    });\n  };\n\n  const validationsRegister = yup.object().shape({\n    nome: yup.string().max(50).min(10, \"Digite o seu nome completo.\").required(\"O nome é obrigatório.\"),\n    email: yup.string().email(\"E-mail inválido.\").required(\"O email é obrigatório.\"),\n    password: yup.string().min(8, \"A senha deve ter pelo menos 8 caracteres.\").max(12).required(\"A senha é obrigatória.\"),\n    confirmation: yup.string().max(12).oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes.\").required(\"A confirmação da senha é obrigatória.\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cadastre-se no nosso Sistema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {},\n      onSubmit: handleRegister,\n      validationSchema: validationsRegister,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formulario\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"nome\",\n            className: \"form-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"nome\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"E-mail: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\",\n            className: \"form-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"email\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            className: \"form-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"password\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirma\\xE7\\xE3o Senha: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"confirmation\",\n            className: \"form-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"span\",\n            name: \"confirmation\",\n            className: \"form-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          onClick: handleClick(),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CadastroLogin;\nexport default CadastroLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroLogin\");","map":{"version":3,"sources":["C:/Users/rebec/Desktop/sis.cadastro/client/src/cadastroLogin/CadastroLogin.js"],"names":["React","Axios","yup","ErrorMessage","Formik","Form","Field","CadastroLogin","handleRegister","values","post","nome","email","password","then","response","alert","data","msg","console","log","validationsRegister","object","shape","string","max","min","required","confirmation","oneOf","ref","handleClick","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport * as yup from \"yup\";\r\nimport { ErrorMessage, Formik, Form, Field } from \"formik\";\r\nimport \"./CadastroLogin.css\";\r\n\r\nfunction CadastroLogin() {\r\n  /*\r\n  const [dadosLogin, setDadosLogin] = useState({\r\n    nomeLogin: \"\",\r\n    emailLogin: \"\",\r\n    senhaLogin: \"\",\r\n    confirmarSenha: \"\",\r\n  });\r\n\r\n  function handleInputChange(e) {\r\n    dadosLogin[e.target.name] = e.target.value;\r\n    setDadosLogin(dadosLogin);\r\n  }\r\n\r\n  // Função para comprar Senha e Confirmação\r\n  function confirmacaoSenha() {\r\n    const senha = dadosLogin.senhaLogin;\r\n    const confSenha = dadosLogin.confirmarSenha;\r\n    if (senha !== confSenha) {\r\n      alert(\"As senhas são diferentes\");\r\n    }\r\n  }\r\n\r\n  function validarNome() {\r\n    const campoNome = dadosLogin.nomeLogin.length;\r\n    console.log(campoNome);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    confirmacaoSenha(dadosLogin);\r\n\r\n    Axios.post(\"http://localhost:3080/registrar-usuario\", {\r\n      nomeLogin: dadosLogin.nomeLogin,\r\n      emailLogin: dadosLogin.emailLogin,\r\n      senhaLogin: dadosLogin.senhaLogin,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }*/\r\n\r\n  const handleRegister = (values) => {\r\n    Axios.post(\"http://localhost:3001/register\", {\r\n      nome: values.nome,\r\n      email: values.email,\r\n      password: values.password,\r\n    }).then((response) => {\r\n      alert(response.data.msg);\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const validationsRegister = yup.object().shape({\r\n    nome: yup\r\n      .string()\r\n      .max(50)\r\n      .min(10, \"Digite o seu nome completo.\")\r\n      .required(\"O nome é obrigatório.\"),\r\n    email: yup\r\n      .string()\r\n      .email(\"E-mail inválido.\")\r\n      .required(\"O email é obrigatório.\"),\r\n    password: yup\r\n      .string()\r\n      .min(8, \"A senha deve ter pelo menos 8 caracteres.\")\r\n      .max(12)\r\n      .required(\"A senha é obrigatória.\"),\r\n    confirmation: yup\r\n      .string()\r\n      .max(12)\r\n      .oneOf([yup.ref(\"password\"), null], \"As senhas são diferentes.\")\r\n      .required(\"A confirmação da senha é obrigatória.\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h4>Cadastre-se no nosso Sistema</h4>\r\n      <h4>Cadastro</h4>\r\n\r\n      <Formik\r\n        initialValues={{}}\r\n        onSubmit={handleRegister}\r\n        validationSchema={validationsRegister}\r\n      >\r\n        <Form className=\"formulario\">\r\n          <div className=\"form-group\">\r\n            <label>Nome: </label>\r\n            <Field type=\"text\" name=\"nome\" className=\"form-field\" />\r\n\r\n            <ErrorMessage component=\"span\" name=\"nome\" className=\"form-error\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>E-mail: </label>\r\n            <Field type=\"email\" name=\"email\" className=\"form-field\" />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"email\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Senha: </label>\r\n            <Field type=\"password\" name=\"password\" className=\"form-field\" />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"password\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Confirmação Senha: </label>\r\n            <Field type=\"password\" name=\"confirmation\" className=\"form-field\" />\r\n\r\n            <ErrorMessage\r\n              component=\"span\"\r\n              name=\"confirmation\"\r\n              className=\"form-error\"\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"button\"\r\n            type=\"submit\"\r\n            onClick={handleClick()}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            Cadastrar\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default CadastroLogin;\r\n"]},"metadata":{},"sourceType":"module"}